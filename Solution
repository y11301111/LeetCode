import java.util.Hashtable;
public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		for (int i = 0; i < nums.length; i++) {
			if (map.get(nums[i]) != null&&i - map.get(nums[i]) <= k)
				return true;
			else
				map.put(nums[i], i);
		}
		return false;
    }
}

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Boolean flag = false;
        for (int i = 0; i < nums.length;i++) {
            for(int j = i + 1; j < nums.length;j++) {
                int n = j - i;
                if(nums[i] == nums[j] && n <= k){
                    flag = true;
                }
            }
        }
        
        return flag;
    }
}